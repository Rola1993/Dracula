Dracula Narrative


text_file = open('dracula.txt', 'r')
text_lines = text_file.readlines()
text_file.close()

------------------------------------------------------------------------------------
This is for opening and reading the text of the book Dracula.
------------------------------------------------------------------------------------

num_lines = 0
content_found = False

while not content_found:
    line = text_lines[num_lines].lower()
    if 'contents' in line:
        content_found = True
        print ('The line number of the contents beginning is', num_lines + 1)
    else:
        num_lines += 1

contents_begin = num_lines

------------------------------------------------------------------------------------
This is to find the contents line by line, using the keyword 'contents' as all letters in the lines has been lowercased.
I also use the variable 'contents_begin' to mark the place where the contens begins.
------------------------------------------------------------------------------------

for line in text_lines[contents_begin:]:
    if 'dracula' in line.lower():
        print ('The line number of the body beginning is', num_lines + 1)
        break
    else:
        num_lines += 1

contents_end = num_lines - 1

------------------------------------------------------------------------------------
This is to find the body line by line, using the keyword 'contents' as all letters in the lines has been lowercased.
I also use the variable 'contents_end' to mark the place where the contens ends.
------------------------------------------------------------------------------------

titles = []
for line in text_lines[contents_begin:contents_end]:
    if line.upper() != line:
        if 'Page' not in line:
            line = line.replace(',', '')
            line = line.replace('"', '')
            line = line.replace('-', '')
            words = line.split()
            words.remove(words[-1])
            print (words)
            title = ''
            word_no = 1
            for i in words:
                title = title + i.__str__()
                if word_no != words.__len__():
                    title = title + '_'
                word_no += 1
            print (title)
            titles.append(title)

begin_line_number = num_lines
chapter_number = 1

------------------------------------------------------------------------------------
This is to find the title of each chapter in the contents. 
Because in the contents, letters in the lines with chapter number are all in uppercase while those in the lines with chapter title are not, I use the if condition 'if line.upper() != line' to detext the titles.
I use string replace function to remove punctuation, split the title into a word list and add '_' between each word
to make it meet the required format. Plus, I use word_no to make sure it is not the last word, otherwise there would be no '_' after the word.
I create a list 'titles' to store the chapter titles in sequence.
------------------------------------------------------------------------------------

def counting(chapter_name, chapter_number):
    text = open(chapter_name).readlines()
    lines = 0
    s = 0
    w = 0

    for line in text:
        li = line.split()
        lines += 1
        for word in li:
            l = len(word)
            s += l
            w += 1

    print("The number of letters is:", s, "The number of words is", w, "The number of lines is", lines)
    data = open('Counting', 'a+')
    new_line = 'For Chapter' + chapter_number.__str__() + ', it has ' + lines.__str__() + ' lines,' + w.__str__() + ' words and ' + s.__str__() + ' letters.\n'
    data.write(new_line)
	
------------------------------------------------------------------------------------
This is for counting the lines, words and letters in each chapter. 
I create a file 'Counting' to store this information.
I open the file by 'a+' so the written text would not be overrided.
I use the string 'new_line' to state how many lines, words and letters in each chapter.
Then I add this new_line to the 'data' representing the counting text file.
------------------------------------------------------------------------------------

for line in text_lines[begin_line_number:]:
    if 'chapter' in line.lower():
        chapter_begin = num_lines
        chapter_lines = num_lines
        print ('The chapter', chapter_number, 'is found!')
        chapter_name = 'Dracula-Chapter-' + chapter_number.__str__() + '-' + titles[chapter_number - 1]
        print ('chapter_name is ', chapter_name)
        new_chapter = open(chapter_name, 'w')
        for chapter_line in text_lines[num_lines + 1:]:
            if 'chapter' in chapter_line.lower() or 'THE END' in chapter_line:
                chapter_end = chapter_lines - 1
                chapter_text = text_lines[chapter_begin:chapter_end]
                new_chapter.writelines(chapter_text)
                new_chapter.close()
                counting(chapter_name, chapter_number)
                break
            else:
                chapter_lines += 1
        chapter_number += 1
        num_lines += 1
    else:
        num_lines += 1

------------------------------------------------------------------------------------
This is for creating separate files for each chapter. 
First, I use 'chapter' to detect where a chapter begins. Then I use 'chapter' again to detect where the next chapter
begins. For the last chapter, I use 'THE END' to detect where it ends. Thus, I use chapter_begin and chapter_end to
mark these places, so that I can write the text of each chapter to the new file.
Because the titles in the list are in sequence. I can match them one by one with file name of each chapter.  
Whhen the new text file of each chapter is finished, it calls the counting function to count how many lines, words and
letters in the text.
------------------------------------------------------------------------------------